<?xml version="1.0" encoding="utf-8"?>

<configuration>

  <appSettings>
    <add key="aspnet:UseTaskFriendlySynchronizationContext" value="true" />
  </appSettings>
  <system.web>
    <compilation debug="true" />
  </system.web>
  <!-- Во время развертывания проекта библиотеки служб содержимое файла конфигурации необходимо добавить к файлу 
  app.config на узле. Файлы конфигурации для библиотек не поддерживаются System.Configuration. -->
  <system.serviceModel>
    <bindings>
      <wsDualHttpBinding>
        <binding name="UserBinding">
          <security mode="None" />
        </binding>
      </wsDualHttpBinding>
    </bindings>
    <services>
      <service name="WcfService.ServiceGame">
        <endpoint address="" binding="wsDualHttpBinding" bindingConfiguration="UserBinding"
                  contract="WcfService.IServiceGame">
          <identity>
            <dns value="DSTEH" />
            <certificateReference storeLocation="CurrentUser" />
          </identity>
        </endpoint>
        <endpoint address="mex" binding="mexHttpBinding" contract="IMetadataExchange" />
        <host>
          <baseAddresses>
            <add baseAddress="http://localhost:8733/Design_Time_Addresses/WcfService/ServiceGame/" />
          </baseAddresses>
        </host>
      </service>
    </services>
    <behaviors>
      <serviceBehaviors>
        <behavior>
          <!--Чтобы избежать раскрытия метаданных, 
          до развертывания задайте следующим параметрам значение "false".-->
          <serviceMetadata httpGetEnabled="True" httpsGetEnabled="True" />
          <!-- Чтобы получить сведения об исключениях в ошибках для отладки, 
          установите ниже значение TRUE. Перед развертыванием установите значение FALSE, 
           чтобы избежать разглашения сведений об исключении -->
          <serviceDebug includeExceptionDetailInFaults="True" />
        </behavior>
      </serviceBehaviors>
    </behaviors>
  </system.serviceModel>

</configuration>